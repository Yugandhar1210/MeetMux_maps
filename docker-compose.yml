version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: meetmux-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: meetmux123
      MONGO_INITDB_DATABASE: meetmux
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - meetmux-network

  # Backend API Server
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: meetmux-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:meetmux123@mongodb:27017/meetmux?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      CLIENT_URL: http://localhost:5173
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - meetmux-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: meetmux-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SERVER_URL: http://localhost:5000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - meetmux-network

  # Redis (Optional - for session management and caching)
  redis:
    image: redis:alpine
    container_name: meetmux-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - meetmux-network

  # Nginx (Optional - for production reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: meetmux-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - meetmux-network
    profiles:
      - production

# Docker Networks
networks:
  meetmux-network:
    driver: bridge

# Docker Volumes
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local